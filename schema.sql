create table
  public.colleges (
    prefix text not null,
    name text not null,
    constraint colleges_pkey primary key (prefix)
  ) tablespace pg_default;

create table
  public.departments (
    id integer generated by default as identity not null,
    name text not null,
    college_prefix text not null,
    constraint departments_pkey1 primary key (id),
    constraint departments_college_prefix_fkey foreign key (college_prefix) references colleges (prefix) on update cascade on delete cascade
  ) tablespace pg_default;

create type program_type as enum ('BS','BA','BFA','BArch','BLA');

create table
  public.programs (
    id integer generated by default as identity not null,
    name text not null,
    type public.program_type not null,
    department_id integer not null,
    constraint programs_pkey primary key (id),
    constraint programs_department_id_fkey foreign key (department_id) references departments (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.concentrations (
    id bigint generated by default as identity not null,
    name text not null,
    program_id integer not null,
    constraint concentrations_pkey primary key (id),
    constraint concentrations_program_id_fkey foreign key (program_id) references programs (id)
  ) tablespace pg_default;

create table
  public.plans (
    id integer generated by default as identity not null,
    user_id uuid not null,
    program_id integer not null,
    graduation_date date null,
    concentration_id bigint null,
    constraint plans_pkey primary key (id),
    constraint plans_concentration_id_fkey foreign key (concentration_id) references concentrations (id) on update cascade on delete cascade,
    constraint plans_program_id_fkey foreign key (program_id) references programs (id) on update cascade on delete cascade,
    constraint plans_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.subjects (
    name text not null,
    prefix text not null,
    constraint departments_pkey primary key (prefix)
  ) tablespace pg_default;

create table
  public.courses (
    id integer generated by default as identity not null,
    name text not null,
    prefix text not null,
    number smallint not null,
    description text not null,
    crosslisted integer null,
    constraint courses_pkey primary key (id),
    constraint course_unique unique (prefix, number),
    constraint courses_prefix_fkey foreign key (prefix) references subjects (prefix)
  ) tablespace pg_default;

create type term as enum ('F','W','SP','SU','TBD');

create table
  public.course_terms (
    course_id integer not null,
    term public.term not null default 'TBD'::term,
    constraint course_terms_pkey primary key (course_id, term),
    constraint course_terms_course_id_fkey foreign key (course_id) references courses (id)
  ) tablespace pg_default;

create table
  public.courses_completed (
    user_id uuid not null,
    course_id integer not null,
    constraint courses_completed_pkey primary key (user_id, course_id),
    constraint courses_completed_course_id_fkey foreign key (course_id) references courses (id) on update cascade on delete cascade,
    constraint courses_completed_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;

  create table
  public.course_prerequisites (
    set_number integer generated by default as identity not null,
    course_id integer not null,
    constraint course_prerequisites_pkey primary key (set_number),
    constraint course_prerequisites_course_id_fkey foreign key (course_id) references courses (id)
  ) tablespace pg_default;

  create table
  public.prerequisite_course_sets (
    entry integer generated by default as identity not null,
    set_number integer not null,
    course_id integer null,
    constraint prerequisite_course_sets_pkey primary key (entry),
    constraint prerequisite_course_sets_course_id_fkey foreign key (course_id) references courses (id),
    constraint prerequisite_course_sets_set_number_fkey foreign key (set_number) references course_prerequisites (set_number) on update cascade on delete cascade
  ) tablespace pg_default;

  create table
  public.prerequisite_string_sets (
    set_number integer not null,
    prerequisite_string text not null,
    entry integer generated by default as identity not null,
    constraint prerequisite_string_sets_pkey primary key (entry),
    constraint prerequisite_string_sets_set_number_fkey foreign key (set_number) references course_prerequisites (set_number) on update cascade on delete cascade
  ) tablespace pg_default;

  create table
  public.program_courses (
    program_id integer not null,
    course_id integer not null,
    constraint program_courses_pkey primary key (program_id, course_id),
    constraint program_courses_course_id_fkey foreign key (course_id) references courses (id) on update cascade,
    constraint program_courses_program_id_fkey foreign key (program_id) references programs (id) on update cascade
  ) tablespace pg_default;